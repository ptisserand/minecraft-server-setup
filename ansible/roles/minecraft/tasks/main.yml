- name: Include minecraft version specific 
  include_vars: minecraft-{{ MINECRAFT_VERSION }}.yml

- name: Create minecraft data directory
  file:
    path: "{{ MINECRAFT_DATA_DIR }}"
    state: directory
    owner: "{{ USER_NAME }}"
  
- name: Download minecraft server jar
  get_url:
    url: "{{ MINECRAFT_SERVER_JAR_URL }}"
    dest: "{{ MINECRAFT_DATA_DIR }}/{{ MINECRAFT_SERVER_JAR }}"
    owner: "{{ USER_NAME }}"
  become_user: "{{ USER_NAME }}"

- name: Copy minecraft tarball
  unarchive:
    src: minecraft-config-{{ MINECRAFT_VERSION }}.tar.gz
    dest: "{{ MINECRAFT_DATA_DIR }}"
    owner: "{{ USER_NAME }}"
  become_user: "{{ USER_NAME }}"
  when: inventory_hostname != "localhost"

- name: Copy minecraft files
  copy:
    src: "{{ item }}"
    dest: "{{ MINECRAFT_DATA_DIR }}"
    owner: "{{ USER_NAME }}"
  with_items:
    - server.properties
    - eula.txt
    - ops.json
    - whitelist.json
  become_user: "{{ USER_NAME }}"
  when: inventory_hostname == "localhost"

- name: Create docker destination directory
  file:
    path: "{{ MINECRAFT_ROOT_DIR }}"
    state: directory
    owner: "{{ USER_NAME }}"

- name: Copy Dockerfile
  copy:
    src: Dockerfile-{{ MINECRAFT_VERSION }}
    dest: "{{ MINECRAFT_ROOT_DIR }}/Dockerfile"
    owner: "{{ USER_NAME }}"
  become_user: "{{ USER_NAME }}"

- name: Copy docker-compose
  copy:
    src: docker-compose.yml
    dest: "{{ MINECRAFT_ROOT_DIR }}/docker-compose.yml"
    owner: "{{ USER_NAME }}"
  become_user: "{{ USER_NAME }}"
